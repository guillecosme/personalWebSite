
:::AWS Logging:::

- Avaliar muito a questão da infra de ClouWatch, como obter dados em realtime. Por xemplo, se quero obter dados/logEvents diretamente do CloudWatch, 
    é necessário criar um Filtering e após isso usar uma Lambda Gerenciada pela AWS e armazenar os dados no S3 ou ElasticCache, é possível também escrever um lambda própria
    para realizar tal ação. Caso a necessidade seja quase real time utilizar o AWS Kinesis Firehose.

    Por padrão o Export de eventos do CloudWatch para buckets S3 pode levar até 12 horas de duração.

- Importante entnder a diferença dos divers níveís de aplicação do VPC Flow Logging, basicamente é um serviço da AWS que fornece o detalhamento de Logs dos Pacotes de comunicaçõa
    de rede dentro de uma VPC, você pode ativar o VPC Flow Logs em uma VPC específica, uma Subnet específica ou até mesmo uma única interface de rede específica
    (Elastic Network Interface).

- Lembrar sempre que o AWS X-Ray é um ferramenta de tracing para aplicações servless distribuída, ter muit claro como exemplo a solução de criação de contas do Itaú, onde uma requisção 
    por exemplo para o API Gateway, por de entrada para a aplicação distribuída, deverá sempre receber um header de tracing, para que os tempos de respostas de cada segmento da 
    aplicação seja rastreado.

:::AWS ECS:::

- Importante ter muito claro o conceito de virtualização e o overhead necessário para manter uma aplicação no ar (Sempre pegar como exemplo uma aplicação Web), onde você tem
    algumas camadas diferentes para construir até ter o serviço disponível, sendo elas as seguintes:
        - Hardware
        - Hypervisor
        - Sistema Operacional
        - Máquina Virtual + S.O específico
        - Aplicação consumindo os recursos do Sitema Operacional

    Com containers na nuvem a situação é resolvida retirando-se as camadas de hardware e Hypervisor (pois o provedor irá fornecer e administrar a solução) e no caso da
    máquina virtual substituido a por uma Engine que orquestra os containers, a mais comum por exemplo na AWS, é o Docker.

    Um docker possui os eguintes conceitos:
    - Docker Host
    - Docker File
    - Doker Image

    Basicamente cada aplicação fica isolada com a suas próprias dependências sendo mais fácil de gerênciá-las.

    É sempre possível realizar a execução e adminsitração de um container subindo uma EC2 na mão, instalando a Engine do Docker e administrando este ambiente. Porém a AWS criou um
    serviço próprio pra isso chamado de ECS, Elastic Container Services, onde todas estas atividades podem ser otimizadas pela console. Inclusive para criar e gerenciar  clusters
    de containers a AWS criou as seguintes modalidades:

        - ECS Cluster (EC2). Nesta modalide você administra e paga os custos da EC2, indpendente se há containers rodando ou não
        - Fargate Cluester (Não é servless, ainda existem instânicas EC2 administradas pela AWS em um zona compartilhada, uma ENI é criada entre está instância e a VPC informada 
            por você, portando paesar de estar na zona compartilhada ela praticamente se comporta como se estivesse na sua VPC). Nesta modalidade você não paga pelos custos da EC2

    Entender melhor os seguintes conceitos

        - Docker Storage
        - Docker Image
        - Task Definitions
        - Service Definitions
        - Clusters

:::AWS CloudFormation:::

    Basicamente um serviço para criarmos infraestrutura a partir de código, é sempre escrito em formato JSON oU YAML, o mais utlizado atualemnte é o YAML. Este serviço é muito útil
        pois permite a rápida criação de recursos em diversas regiões, é possível atualizá-los e deleta-los de maneira muito prática. Alguns conceitos importantes sobre o serviço:

        - CloudFormation Template
